"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6674],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),i=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=i(e.components);return o.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=i(n),h=r,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||a;return n?o.createElement(m,s(s({ref:t},l),{},{components:n})):o.createElement(m,s({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var i=2;i<a;i++)s[i]=n[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2572:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>i});var o=n(7462),r=(n(7294),n(3905));const a={},s=void 0,c={unversionedId:"main/context/EthersAppContext",id:"main/context/EthersAppContext",title:"EthersAppContext",description:"How to use EthersAppContext & hooks",source:"@site/docs/main/context/EthersAppContext.mdx",sourceDirName:"main/context",slug:"/main/context/EthersAppContext",permalink:"/eth-ui/docs/main/context/EthersAppContext",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/main/context/EthersAppContext.mdx",tags:[],version:"current",frontMatter:{},sidebar:"overview",previous:{title:"ContractAppContext",permalink:"/eth-ui/docs/main/context/ContractAppContext"},next:{title:"Quick start",permalink:"/eth-ui/docs/main/guides/intro"}},p={},i=[{value:"How to use EthersAppContext &amp; hooks",id:"how-to-use-ethersappcontext--hooks",level:2},{value:"How to pass a provider directly into <code>EthersAppContext</code>",id:"how-to-pass-a-provider-directly-into-ethersappcontext",level:2},{value:"Using <code>EthersAppContext</code> with <code>web3Modal</code>",id:"using-ethersappcontext-with-web3modal",level:2},{value:"\ud83d\udea9 1. Create your <code>web3Config</code>",id:"-1-create-your-web3config",level:3},{value:"\ud83d\udea9 2. Create a function that returns a <code>TEthersModalConnector</code>",id:"-2-create-a-function-that-returns-a-tethersmodalconnector",level:3},{value:"\ud83d\udea9 3. Create a login event handler",id:"-3-create-a-login-event-handler",level:3}],l={toc:i};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"how-to-use-ethersappcontext--hooks"},"How to use EthersAppContext & hooks"),(0,r.kt)("p",null,"To get access to signer, provider, and account addresses you will need to use EthersAppContext."),(0,r.kt)("p",null,"Here's an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const ethersContext = useEthersContext();\n// you now have access to signer, provider, account (address), etc...  See IEthersContext for details\n")),(0,r.kt)("p",null,"You can then use hooks in your app:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// ---------------------\n// \ud83c\udfe6 get your balance\n// ---------------------\n// This instance uses the provider from the context in useBalance internally\nconst [yourLocalBalance, update, status] = useBalance(ethersContext.account);\nZ;\n")),(0,r.kt)("p",null,"Here's how to change an update interval:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// normally the hooks update every block\nconst [yourLocalBalance, update, status] = useBalance(ethersContext.account);\n// you can change the update schedule to every 10 blocks, the default is every 1 block:\nconst [yourLocalBalance, update, status] = useBalance(ethersContext.account, { blockNumberInterval: 10 });\n// you can change the update schedule to every polling, min is 10000ms\nconst [yourLocalBalance, update, status] = useBalance(ethersContext.account, {\n  refetchInterval: 100000,\n  blockNumberInterval: undefined,\n});\n// you can use advanced react-query update options\nconst [yourLocalBalance, update, status] = useBalance(ethersContext.account, {\n  blockNumberInterval: 1,\n  query: { refetchOnWindowFocus: true },\n});\n")),(0,r.kt)("p",null,"An example of overriding the provider from the context:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// get an adaptor from a provider or signer\nconst [mainnetAdaptor] = useEthersAdaptorFromProviderOrSigners(exampleMainnetProvider);\n// pass in the override variable\nconst [yourMainnetBalance] = useBalance(ethersContext.account, mergeDefaultUpdateOptions(), {\n  adaptorEnabled: true,\n  adaptor: mainnetAdaptor,\n});\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Check out Scaffold-eth-typescript ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/scaffold-eth-typescript/blob/next/packages/vite-app-ts/src/components/main/hooks/useScaffoldHooksExamples.tsx"},"useScaffoldHooksExamples.tsx")," for more examples")),(0,r.kt)("h2",{id:"how-to-pass-a-provider-directly-into-ethersappcontext"},"How to pass a provider directly into ",(0,r.kt)("inlineCode",{parentName:"h2"},"EthersAppContext")),(0,r.kt)("p",null,"You can pass a provider into ",(0,r.kt)("inlineCode",{parentName:"p"},"EthersAppContext")," directly if you don't want to use ",(0,r.kt)("inlineCode",{parentName:"p"},"EthersModalConnect")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"web3Modal"),"."),(0,r.kt)("p",null,"This would be a way to override the default mechansim if you have your own login UI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"<EthersAppContext customGetEthersAppProviderLibrary={customFunction}>\n  <YourMainPage />\n</EthersAppContext>\n")),(0,r.kt)("p",null,"In the above example, ",(0,r.kt)("inlineCode",{parentName:"p"},"customFunction")," should be a function that returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"TEthersProvider"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// a simple example\nexport type TGetEthersAppProviderLibrary = () => TEthersProvider;\n\n// a function that transforms a provider into a TEthersProvider\nexport type TGetEthersAppProviderLibrary = (\n  provider: TEthersProvider | ExternalProvider | JsonRpcFetchFunc | any\n) => TEthersProvider;\n")),(0,r.kt)("h2",{id:"using-ethersappcontext-with-web3modal"},"Using ",(0,r.kt)("inlineCode",{parentName:"h2"},"EthersAppContext")," with ",(0,r.kt)("inlineCode",{parentName:"h2"},"web3Modal")),(0,r.kt)("p",null,"Ethers context will automatically give you a way to integrate ",(0,r.kt)("inlineCode",{parentName:"p"},"web3Modal")," into your app."),(0,r.kt)("h3",{id:"-1-create-your-web3config"},"\ud83d\udea9 1. Create your ",(0,r.kt)("inlineCode",{parentName:"h3"},"web3Config")),(0,r.kt)("p",null,"You can check out the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Web3Modal/web3modal#using-with-ethersjs"},"web3 modal")," Github repo for a detailed explanation."),(0,r.kt)("p",null,"You can also see an example in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/scaffold-eth-typescript/blob/next/packages/vite-app-ts/src/config/web3ModalConfig.ts#L8"},"scaffold-eth-typescript web3ModalConfig.ts"),"."),(0,r.kt)("h3",{id:"-2-create-a-function-that-returns-a-tethersmodalconnector"},"\ud83d\udea9 2. Create a function that returns a ",(0,r.kt)("inlineCode",{parentName:"h3"},"TEthersModalConnector")),(0,r.kt)("p",null,"This function should have a signature that returns ",(0,r.kt)("inlineCode",{parentName:"p"},"TEthersModalConnector"),", which is an interface that is implemented by ",(0,r.kt)("a",{parentName:"p",href:"https://scaffold-eth.github.io/eth-ui/api-typedocs/classes/EthersAppContext.EthersModalConnector.html"},"EthersModalConnector"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"type TCreateEthersModalConnector = (id?: string) => TEthersModalConnector | undefined;\n")),(0,r.kt)("p",null,"For a more complete example, see ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/scaffold-eth/scaffold-eth-typescript/blob/next/packages/vite-app-ts/src/components/main/hooks/useScaffoldAppProviders.ts#L53"},"scaffold-eth-typescript createLoginConnector"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"// theme: can be 'light' or 'dark'\n// web3Config: is for web3Modal configuration\n// id: allows you to programatically to a provider defined for the modal, see the web3Modal for details.\nconst createLoginConnector: TCreateEthersModalConnector = useCallback(\n  (id?: string) => {\n    if (web3Config) {\n      const connector = new EthersModalConnector({ ...web3Config, theme: currentTheme }, id);\n      return connector;\n    }\n  },\n  [web3Config, currentTheme]\n);\n")),(0,r.kt)("p",null,"You can find the details for ",(0,r.kt)("a",{parentName:"p",href:"https://scaffold-eth.github.io/eth-ui/api-typedocs/classes/EthersAppContext.EthersModalConnector.html"},"EthersModalConnector")," in the API docs."),(0,r.kt)("h3",{id:"-3-create-a-login-event-handler"},"\ud83d\udea9 3. Create a login event handler"),(0,r.kt)("p",null,"You can then call the function we created above in the event handler of your login button anywhere in your app."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"  ...\n  const ethersContext = useEthersContext();\n\n  // to handle a login\n  const handleLoginClick = (): void => {\n    if (createLoginConnector != null && ethersContext?.openModal != null) {\n      const connector = createLoginConnector();\n      ethersContext.openModal(connector);\n    }\n  };\n\n  // to handle a log out\n  const handleLogoutClick = (): void => {\n    if (ethersContext?.disconnectModal != null) {\n      ethersContext.disconnectModal();\n    }\n  };\n")))}u.isMDXComponent=!0}}]);